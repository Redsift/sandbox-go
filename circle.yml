machine:
  environment:
    GO_VERSIONS: 1.9.2 1.9.4
    RPC_REPO: github.com/redsift/go-sandbox-rpc
    RPC_REPO_COMMIT: c7a7e80
    CONTAINER_NAME: quay.io/redsift/sandbox-go
    CIRCLE_REVERSE_DEPENDENCIES: sandbox-go-rocksdb
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.0-circleci'
    - sudo chmod 0755 /usr/bin/docker
  services:
    - docker

dependencies:
  override:
    - docker info
    - |
      set -e
      # Build Go
      LOCAL_RPC_REPO="root/usr/lib/redsift/workspace/src/${RPC_REPO}"
      git clone "git@${RPC_REPO/com\//com:}" $LOCAL_RPC_REPO
      pushd $LOCAL_RPC_REPO
      git checkout $RPC_REPO_COMMIT
      popd
      for GV in $GO_VERSIONS
      do
        docker build --build-arg golang_version=$GV -t $GV -f Dockerfile .
      done

test:
  override:
    - |
      set -e
      sudo groupadd -g 7438 sandbox
      sudo adduser --system --no-create-home --shell /bin/false -u 7438 -gid 7438 sandbox
      sudo chown -R sandbox:sandbox ${PWD}
      for GV in $GO_VERSIONS
      do
        INIT=$(docker inspect -f "{{index .Config.Labels \"io.redsift.sandbox.install\" }}" $GV)
        echo "Calling init = $INIT"
        docker run -u 7438:7438 -v $PWD/testFixtures/sift:/run/sandbox/sift $GV $INIT 0 1 2
        ls -A $PWD/testFixtures/sift/server || true
        RUN=$(docker inspect -f "{{index .Config.Labels \"io.redsift.sandbox.run\" }}" $GV)
        echo "Calling run = $RUN"
        docker run -u 7438:7438 -v $PWD/testFixtures/sift:/run/sandbox/sift:ro -e DRY=true $GV $RUN 0 1 2
      done

deployment:
  production:
    branch: master
    commands:
      - docker login -e $QUAY_EMAIL -u $QUAY_USER -p $QUAY_PASS quay.io
      - |
        set -e
        latest=""
        for GV in $GO_VERSIONS
        do
          GO_VERSION=$(docker run -u 7438:7438 -t --entrypoint=/usr/local/go/bin/go $GV version 2>&1 | cut -s -d " " -f3 | sed 's/go//')
          VERSION_ARRAY=(${GO_VERSION//_/ })
          VERSION=v${VERSION_ARRAY[0]}
          MAJOR_NUMBER=(${VERSION//./ })
          MAJOR_VERSION=$MAJOR_NUMBER
          echo "Tagging as $CONTAINER_NAME:$VERSION"
          docker tag $GV:latest $CONTAINER_NAME:$VERSION
          echo "Tagging as $CONTAINER_NAME:$MAJOR_VERSION"
          docker tag $GV:latest $CONTAINER_NAME:$MAJOR_VERSION
          latest=$GV:latest
        done
        echo "Tagging $latest as $CONTAINER_NAME:latest"
        docker tag $latest $CONTAINER_NAME:latest
        docker push $CONTAINER_NAME
      - ./circle_ci_trigger_build
