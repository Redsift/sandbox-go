#!/bin/bash
set -eu

GV=$1
IS_LATEST=${2:-}

CIRCLE_BRANCH=${CIRCLE_BRANCH/\//-} # fix/sth => fix-sth
tagName=(${CIRCLE_BRANCH/-/ }) # release-1 => release
SUFFIX="-beta"
if [ $tagName == "release" ]; then
  SUFFIX=""
fi
imageName=$CONTAINER_NAME:v$NV$SUFFIX

LOCAL_RPC_REPO="root/usr/lib/redsift/workspace/src/${RPC_REPO}"
git clone "git@${RPC_REPO/com\//com:}" $LOCAL_RPC_REPO
pushd $LOCAL_RPC_REPO
git checkout $RPC_REPO_COMMIT
popd

echo Building $imageName
docker build --build-arg golang_version=$GV -t $imageName .

V=$(docker run -u 7438:7438 -t --entrypoint=/usr/local/go/bin/go $imageName version 2>&1 | cut -s -d " " -f3 | sed 's/go//')
echo "Container reported version:${V}"

MAJOR_VERSION=(${GV//./ })
MV_TAG=$CONTAINER_NAME:v$MAJOR_VERSION$SUFFIX
echo "Tagging as $MV_TAG"
docker tag $imageName $MV_TAG

if [[ "$tagName" == "release" ]] && [[ -n "$IS_LATEST" ]]; then
  echo "Tagging as $CONTAINER_NAME:latest"
  docker tag $imageName $CONTAINER_NAME:latest
fi
